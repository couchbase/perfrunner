[test_case]
test = perfrunner.tests.multibucket.HighBucketDensityTest

[showfast]
title = 1 Bucket test
component = multi_bucket
sub_category = BRQXA

[stats]
server_processes = goxdcr eventing-produc

[cluster]
mem_quota = 23040
index_mem_quota = 40960
fts_index_mem_quota = 40960
analytics_mem_quota = 40960
eventing_mem_quota = 40960
initial_nodes = 8 2
num_buckets = 1
eventing_bucket_mem_quota = 1536
eventing_metadata_bucket_mem_quota = 1024
eventing_buckets = 1

[xdcr_cluster]
sourceNozzlePerNode = 2
targetNozzlePerNode = 2
optimisticReplicationThreshold = 0

[xdcr]
wan_delay = 40

[bucket]
replica_number=1
replica_index=0

[compaction]
db_percentage = 10

[secondary]
indexer.settings.storage_mode = plasma
indexer.numPartitions = 2

[eventing]
functions = perf-test1:tests/eventing/code/bktop.js

[load]
items = 30000000
size = 1024
workers = 10
key_fmtr = hex
doc_gen = multibucket

[access]
creates = 1
items = 30000000
throughput = 1
spring_batch_size = 1
workers = 1
n1ql_queries = range-scan1
n1ql_batch_size = 1
n1ql_workers = 1
n1ql_throughput = 1

[jts]
couchbase_index_configfile = tests/multi_bucket/fts/index/fts_index.json

[index]
statements =
    CREATE INDEX idx11 ON `bucket-1`(alt_email, name) PARTITION BY HASH(META().id) WITH {"defer_build": true};
    CREATE INDEX idx12 ON `bucket-1`(alt_email, city) PARTITION BY HASH(META().id) WITH {"defer_build": true};
    BUILD INDEX ON `bucket-1`(idx11, idx12);

[n1ql-range-scan1]
statement = SELECT email, alt_email FROM `bucket-1` WHERE alt_email > 'a0' limit 1;
scan_consistency = not_bounded
args = []

[rebalance]
nodes_after = 9 2
start_after = 600
stop_after = 600
