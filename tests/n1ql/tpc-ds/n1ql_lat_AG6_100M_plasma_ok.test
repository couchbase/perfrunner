[test_case]
test = perfrunner.tests.n1ql.TpcDsLatencyTest

[showfast]
title = AG6, Aggregation query, Plasma, not_bounded
component = n1ql
category = aggregation
sub_category = Latency

[cluster]
mem_quota = 50000
index_mem_quota = 300000
initial_nodes = 6
num_buckets = 1

[bucket]
replica_number = 0

[secondary]
indexer.settings.storage_mode = plasma

[import]
import_file = /home/backups/tpc-ds.json

[load]
doc_gen = tpc_ds

[index]
statements =
    CREATE INDEX ag6 ON `bucket-1`(customer.gender, customer.marital_status, customer.education_status, item.id, quantity, list_price, coupon_amt, sales_price);

[access]
items = 1000000
time = 600
n1ql_queries = aggregation
n1ql_batch_size = 10
n1ql_workers = 2

[n1ql-aggregation]
statement = SELECT item.id, AVG(quantity) AS avg_quantity, AVG(list_price) AS avg_list_price, AVG(coupon_amt) AS avg_coupon_amt, AVG(sales_price) AS avg_sales_price FROM `bucket-1` WHERE customer.gender = $1 AND customer.marital_status = $2 AND customer.education_status = $3 GROUP BY item.id ORDER BY item.id LIMIT 100;
scan_consistency = not_bounded
args = ["{gender}", "{marital_status}", "{education_status}"]
