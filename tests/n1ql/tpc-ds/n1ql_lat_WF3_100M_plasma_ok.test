[test_case]
test = perfrunner.tests.n1ql.TpcDsLatencyTest

[showfast]
title = WF3, Windowing query, Plasma, not_bounded
component = n1ql
category = windowing
sub_category = Latency

[cluster]
mem_quota = 50000
index_mem_quota = 300000
initial_nodes = 6
num_buckets = 1

[bucket]
replica_number = 0

[secondary]
indexer.settings.storage_mode = plasma

[import]
import_file = /home/backups/tpc-ds.json

[load]
doc_gen = tpc_ds

[index]
statements =
    CREATE INDEX wf3 ON `bucket-1`(item.manufacturer_id, item.brand, sales_price);

[access]
items = 1000000
time = 600
n1ql_queries = windowing
n1ql_workers = 4

[n1ql-windowing]
statement = SELECT item.brand, SUM(sales_price) AS item_revenue, SUM(sales_price)*100/SUM(SUM(sales_price)) OVER (PARTITION BY item.brand) AS revenue_ratio, COUNT(1) OVER (PARTITION BY item.brand) AS items_per_brand FROM `bucket-1` WHERE item.manufacturer_id = $1 GROUP BY item.brand ORDER BY item_revenue DESC,  item.brand, revenue_ratio;
scan_consistency = not_bounded
args = [{manufacturer_id}]
