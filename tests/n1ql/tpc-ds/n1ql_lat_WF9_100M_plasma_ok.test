[test_case]
test = perfrunner.tests.n1ql.TpcDsLatencyTest

[showfast]
title = WF9, Windowing query, Plasma, not_bounded
component = n1ql
category = windowing
sub_category = Latency

[cluster]
mem_quota = 50000
index_mem_quota = 300000
initial_nodes = 6
num_buckets = 1

[bucket]
replica_number = 0

[secondary]
indexer.settings.storage_mode = plasma

[import]
import_file = /home/backups/tpc-ds.json

[load]
doc_gen = tpc_ds

[index]
statements =
    CREATE INDEX wf9 ON `bucket-1`(item.category, DATE_PART_STR(sold_date, 'day_of_year'), sales_price);

[access]
items = 1000000
time = 600
n1ql_queries = windowing
n1ql_batch_size = 1
n1ql_workers = 4

[n1ql-windowing]
statement = SELECT item.category AS category, SUM(sales_price) AS total_sales, RANK() OVER(PARTITION BY item.category ORDER BY SUM(sales_price)) as simple_rank_simple, DENSE_RANK() OVER(PARTITION BY item.category ORDER BY SUM(sales_price)) as dense_rank, PERCENT_RANK() OVER (PARTITION BY  item.category ORDER BY SUM(sales_price)) as percent_rank FROM `bucket-1` WHERE item.category IN $1 AND DATE_PART_STR(sold_date, 'day_of_year') BETWEEN $2 AND $2 + 30 GROUP BY item.category;
scan_consistency = not_bounded
args = [{categories}, {day_of_year}]
ad_hoc = true
